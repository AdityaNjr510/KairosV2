name: Build and Deploy to Google Apps Script

on:
  push:
    branches:
      - main
      - staging

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci
        working-directory: ./client

      - name: Build project
        run: npm run build
        working-directory: ./client

      - name: Install clasp
        run: npm install -g @google/clasp

      - name: Set up clasp credentials
        run: |
          cat > credentials.json << 'EOF'
          {
            "web": {
              "client_id": "${{ secrets.CLASP_CLIENT_ID }}",
              "project_id": "${{ secrets.CLASP_PROJECT_ID }}",
              "auth_uri": "https://accounts.google.com/o/oauth2/auth",
              "token_uri": "https://oauth2.googleapis.com/token",
              "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
              "client_secret": "${{ secrets.CLASP_CLIENT_SECRET }}"
            }
          }
          EOF

      - name: Login to clasp
        run: |
          # For CI/CD, we need to use a service account or OAuth2 flow
          # For now, we'll use a placeholder - you'll need to get access tokens
          echo "Please set up proper authentication for clasp in CI/CD"
          echo "You can either:"
          echo "1. Use a service account key (recommended)"
          echo "2. Use OAuth2 with refresh tokens"
          echo "3. Use GitHub OIDC"
          exit 1

      - name: Push to Google Apps Script
        run: |
          clasp push
          clasp deploy
        env:
          CLASP_IGNORE: .claspignore 